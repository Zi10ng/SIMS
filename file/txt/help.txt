* 如果文件多的话，可以在domin中放入文件位置
* 原本打算就像下面的一样进行对文件格式进行优化，但是转念一想，文件并不是视图层，它只负责数据的存放，
  呈现界面交给view去做就ok，所以下面的格式舍弃
  ID		Name		Java		DB		CI		Avg		Sum		Rank
* 只能通过ID查询，dao层只读入写出数据，甚至不计算平均值
* 汉字乱码问题没有解决，查询中有一个bug // 现在没有
* 没有查空机制
* ID 是主键
* 登录账号和id相关联,如果账号被删除，那么Id登录不上这个系统，管理员设置一个，可以对所有信息进行增删查改，学生只能查看
* 学生模块和登录模块代码有点冗余，想到了一个解决办法，使用泛型，在new对象的时候new一个泛型对象，但是重构很麻烦
* view层其实可以分包，之前把分包取消是因为setVisible能能包内查看。但是其实可以不调用该方法，直接让它关闭然后到时候new一个新的就行了
* 网络版的DAO中可以增加一个缓存，然后不用每次读文件
* 由于开始没有考虑到StringBuffer，现在数据不能动态增加，现在长度是30
* 在创建面板的过程中，由于刚开始考虑不周，导致管理员和学生代码冗余，并且出现许多重复静态字段，拉低程序运行效率
* AdminFrame和AdminPanel可以合到一起，但是第一次用Swing，就又产生了冗余
* GPA中的hash可以优化
* 只能插入int成绩
* 未写学生成绩分析功能:
    后端逻辑代码（加上注释和冗余）一共733行，共三个大包，一共16个类。前端视图层（加上注释和冗余）一共1416行，一个包，共
    25个类。测试代码一共172行，一个类，一个包，共计2321行，42个类。用时约5天40h+

* 修改，路径转到out   通过反射确定绝对路径，.class和.java文字编码方式不一样QAQ 还没搞好
        添加学生成绩分析
        验证码  ok
        插入弹框多元化  ok
        文件存在检测